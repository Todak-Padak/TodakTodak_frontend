name: deploy to aws s3

# main 브랜치에 push 될 때 현재 스크립트 실행 트리거 발동/ merge 시에도 실행됨.
on:
  push:
    branches:
      - main

jobs:
# workflow는 하나 이상의 작업(job)으로 구성. 여기서는 하나의 작업만을 정의
  build-and-deploy:
    runs-on: ubuntu-latest # 우분투 최신 판에서 작업(빌드, 배포 작업 어디서 할건지 지정)
    steps:
    # actions는 깃헙에서 제공되는 공식 워크플로이다.
    # checkout은 현재 repo의 main 브랜치 소스코드를 copy
      - name: source code checkout
        uses: actions/checkout@v2
        # node js 셋팅
      - name: setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
        
      - name: npm install
        working-directory: .
        # run은 직접 사용하고자 하는 명령어이다.
        run: npm install
      
      - name: npm build
        env:
            VUE_APP_REST_API_KEY: ${{ secrets.KAKAO_API_KEY }}
            VUE_APP_API_BASE_URL: ${{secrets.SERVER_URL}}
            VUE_APP_FIREBASE_VAP_ID: ${{ secrets.FIREBASE_VAP_ID }}
            VUE_APP_KAKAO_MAP_JS_APP_KEY: ${{ secrets.KAKAO_MAP_JS_APP_KEY }}
            VUE_APP_KAKAO_API_KEY: ${{ secrets.KAKAO_API_KEY }}
        working-directory: .
        run: npm run build
      
      - name: setup aws cli
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: "ap-northeast-2"
      # --recursive 파일안의 파일안의 모든 파일을 지우겠다.
      - name: clear s3 bucket
        run: aws s3 rm s3://www.todak.site/ --recursive
      # --recursive rm -> cp 복사해주겠다
      - name: deploy to s3
        run: aws s3 cp ./dist s3://www.todak.site/ --recursive
      # 캐시 지워주는 무효화 작업
      - name: invalidate cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id E2KM3C3KGX8UBB --path "/*"
      
